# Fresh build and start
# Run docker-compose up --build
# ... just build
# Run docker-compose build
# ... execute the stack
# Run docker-compose up
# Live long and prosper

# STACK NAME
# mean-todo-app

version: '3'

services:
  client_node:
    build:
      context: client/.
      dockerfile: Dockerfile
    ports:
      - 4200:4200
    depends_on:
      - server_node
    networks:
      - frontend_network
    environment:
      - SERVER_URL=server_node
      - SERVER_PORT=3000
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 100M
      restart_policy:
        condition: on-failure

  server_node:
    build:
      context: server/.
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    depends_on:
      - database_node
    networks:
      - frontend_network
      - backend_network
    environment:
      - ENVIRONMENT=development
      - SERVER_PORT=3000
      - DB_DIALECT=mongo
      - DB_HOST=database_node
      - DB_PORT=27017
      - DB_NAME=dbName
      - DB_USER=dbUser
      - DB_PASSWORD=dbPassword
      - JWT_ENCRYPTION=PleaseChange
      - JWT_EXPIRATION=10000
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 50M
      restart_policy:
        condition: on-failure

  database_node:
    build:
      context: database/.
      dockerfile: Dockerfile
    volumes:
      - ./data/db:/data/db
    ports:
      - 27017:27017
      - 27018:27018
      - 27019:27019
    networks:
      - backend_network
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 100M
      restart_policy:
        condition: on-failure
        delay: 10s
        # max_attemps: 3
        window: 60s

networks:
  frontend_network:
    driver: bridge
  backend_network:
    driver: bridge

# restart_policy:
#    condition: on-failure
#    delay: 5s
#    max_attempts: 3
#    window: 120s